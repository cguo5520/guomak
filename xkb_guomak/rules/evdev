// DO NOT EDIT THIS FILE - IT WAS AUTOGENERATED BY merge.py FROM rules/*.part
//
//
//  Rules for resolving XKB components for use with XFree86
//  Copyright 1996 by Joseph Moss
//
//  2002 Modifier: Ivan Pascal      The XFree86 Project
//

// If you want non-latin layouts implicitly include the en_US layout
// uncomment lines below
//! $nonlatin = am ara ben bd bg bt by cs deva ge gh gr guj guru il \
//              in ir iku jp kan kh kr la lao lk mk mm mn mv mal olck \
//              ori pk ru scc sy syr tel th tj tam ua uz

// PC models
! $pcmodels = pc101 pc102 pc104 pc105

// Jolla devices and keyboards
! $jollamodels = jollasbj

// Microsoft models (using MS geometry)
! $msmodels = microsoft microsoft4000 microsoft7000 microsoftpro microsoftprousb microsoftprose microsoftsurface

// Nokia devices and keyboards
! $nokiamodels = nokiasu8w nokiarx44 nokiarx51

// PC geometries - they have special geometry but symbols are mostly pc105
! $pcgeometries = latitude

// TypeMatrix geometries
! $tmgeometries = tm2020 tm2030PS2 tm2030USB tm2030USB-102 tm2030USB-106

// Layouts that provide further specializations for the OLPC
! $olpclayouts = af am ara br ca es et fr it kh kz in mn np ru th tr us 

! $macbooks = macbook78 macbook79
! $maclaptop = ibook powerbook macbook78 macbook79
! $applealu = applealu_ansi applealu_iso applealu_jis
! $macs = macintosh macintosh_old ibook powerbook macbook78 macbook79

! $macvendorlayouts = ch de dk fi fr gb is it latam nl no pt se us

! $azerty = be fr
! $qwertz = al cz de hr hu ro si sk 


// all layouts with 3rd and 4th groups
! $threelevellayouts = al az \
              be br bt \
              ca ch cs cz \
              de dk \
              ee es \
              fi fo fr \
              gb gr \
              hu \
              ie ir is it \
              latam \
              lk lt \
              mn mt \
              nl no \
              pl pt \
              ro \
              se sk \
              tr \
              us \
              vn \
              za

! $thinkpads = thinkpad thinkpad60 thinkpadz60

! $sun = sun_type6_jp sun_type6_usb sun_type6_euro_usb \
         sun_type6_jp_usb sun_type6_unix_usb sun_type7_jp_usb \
         sun_type7_usb sun_type7_euro_usb sun_type7_unix_usb

! $sun_jp = sun_type6_jp sun_type6_jp_usb sun_type7_jp_usb

// Sun Type_6_7 keyboards with custom layouts
! $sun_custom = ara be br ca ch cz de dk \
                ee es fi fr gb gr it jp \
                kr lt lv nl no pl pt ro \
                ru se sk tr tw ua us

! $sun_var =  sun_type6 sun_type6_suncompat sun_type6_de sun_type6_fr \
              sun_type7 sun_type7_suncompat suncompat

! $sun_compat = sun_type6 sun_type6_suncompat sun_type7_suncompat suncompat


! $evdevkbds = ibm_spacesaver

! $dvoraklayouts = br ca de ee es fr gb no pl se us

! model		=	keycodes
  applealu_jis	=	evdev+macintosh(jisevdev)
 $jollamodels   =       evdev+jolla(jolla)
  olpc          =       evdev+olpc(olpc)
  olpcm         =       evdev+olpc(olpcm)
  *		=	evdev

! layout[1]	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)

! layout	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)

! option	=	keycodes
  apple:badmap	=	+macintosh(badmap)
  apple:goodmap	=	+macintosh(goodmap)

! model		layout	=	geometry
  thinkpad     us              =       thinkpad(us)

! model		=	geometry
  microsoftelite	=	microsoft(elite)
 $msmodels	=	microsoft(natural)
  dell101	=	dell(dell101)
  dellm65	=	dell(dellm65)
  latitude	=	dell(latitude)
  flexpro	=	keytronic(FlexPro)
  hp6000	=	hp(omnibook)
  hpmini110	=	hp(mini110)
  hpdv5		=	hp(dv5)
  omnikey101	=	northgate(omnikey101)
  sanwaskbkg3	=	sanwa(sanwaskbkg3)
 $pcmodels	=	pc(%m)
 $pcgeometries	=	pc(%m)
  everex	=	everex(STEPnote)
  thinkpad	=	thinkpad(intl)
  thinkpad60	=	thinkpad(60)
  thinkpadz60	=	thinkpad(60)
  apex300	=	steelseries(apex300)
 $tmgeometries	=	typematrix(%m)
  winbook	=	winbook(XP5)
  pc98		=	nec(pc98)
 $applealu	=	macintosh(%m)
 $macbooks      =       macintosh(%m)
 $macs		=	macintosh(macintosh)
  hhk		=	hhk(basic)
  kinesis	=	kinesis(model100)
 $nokiamodels	=	nokia(%m)
  sun_type6_jp          =   sun(type6jp)
  sun_type6_usb         =   sun(type6)
  sun_type6_euro_usb    =   sun(type6tuv)
  sun_type6_jp_usb      =   sun(type6jp)
  sun_type6_unix_usb    =   sun(type6unix)
  sun_type7_jp_usb      =   sun(type6jp)
  sun_type7_usb         =   sun(type7)
  sun_type7_euro_usb    =   sun(type7tuv)
  sun_type7_unix_usb    =   sun(type7unix)
  *		=       pc(pc104)


! model		layout				=	symbols
  *		*			=	pc+%l%(v)

! model		layout[1]	=	symbols
  *		*			=	pc+%l[1]%(v[1])

! model		layout[1]	variant[1]	=	symbols
  *		*		=	+%l[2]%(v[2]):2

! model		layout[3]	=	symbols
  *		*		=	+%l[3]%(v[3]):3

! model		layout[4]	=	symbols
  *		*		=	+%l[4]%(v[4]):4

! model		=	symbols
  $evdevkbds    =   +inet(evdev)+inet(%m)
  chromebook    =   +inet(evdev)+inet(chromebook)
  *             =   +inet(evdev)

! model		layout		=	symbols

! layout	variant		=	compat
  de		neo			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		adnw			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		koy			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		bone			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		bone_eszett_home			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		neo_qwertz			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		neo_qwerty			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  jp        $sun_compat =   complete+japan(kana_lock)

! layout[1]	variant[1]	=	compat
  de		neo			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		adnw			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		koy			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		bone			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		bone_eszett_home			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		neo_qwertz			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		neo_qwerty			=	+caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  jp       $sun_compat =   complete+japan(kana_lock)

! layout[2]	variant[2]	=	compat
  de		neo			=	+caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		adnw			=	+caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		koy			=	+caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		bone			=	+caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		bone_eszett_home			=	+caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		neo_qwertz			=	+caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		neo_qwerty			=	+caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  jp       $sun_compat  =   +complete+japan(kana_lock):2

! layout[3]	variant[3]	=	compat
  de		neo			=	+caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		adnw			=	+caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		koy			=	+caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		bone			=	+caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		bone_eszett_home			=	+caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		neo_qwertz			=	+caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		neo_qwerty			=	+caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  jp       $sun_compat  =   +complete+japan(kana_lock):3

! layout[4]	variant[4]	=	compat
  de		neo			=	+caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		adnw			=	+caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		koy			=	+caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		bone			=	+caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		bone_eszett_home			=	+caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		neo_qwertz			=	+caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		neo_qwerty			=	+caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  jp       $sun_compat  =   +complete+japan(kana_lock):4

! model		layout		=	compat
  pc98		nec_vndr/jp	=	pc98(basic)
  *		jp		=	complete+japan
  olpc          *               =       olpc
  olpcm         *               =       olpc
  *		*		=	complete

! model		layout[1]	=	compat
  *		*		=	complete

! model		=	types
  $macs		=	complete+numpad(mac)
  $applealu	=	complete+numpad(mac)
  $nokiamodels	=	complete+nokia
  *		=	complete

! layout	option	=	symbols
  $threelevellayouts	grp:alts_toggle = +level3(ralt_switch_for_alts_toggle)
  *			misc:typo 	= +typo(base)

! layout[1]	option	=	symbols
  $threelevellayouts	grp:alts_toggle = +level3(ralt_switch_for_alts_toggle):1
  *			misc:typo 	= +typo(base):1

! layout[2]	option	=	symbols
  $threelevellayouts	grp:alts_toggle = +level3(ralt_switch_for_alts_toggle):2
  *			misc:typo 	= +typo(base):2

! layout[3]	option	=	symbols
  $threelevellayouts	grp:alts_toggle = +level3(ralt_switch_for_alts_toggle):3
  *			misc:typo 	= +typo(base):3

! layout[4]	option	=	symbols
  $threelevellayouts	grp:alts_toggle = +level3(ralt_switch_for_alts_toggle):4
  *			misc:typo 	= +typo(base):4

! option	=	symbols
  terminate:ctrl_alt_bksp =	+terminate(ctrl_alt_bksp)

! option	=	compat
  grp_led:num		=	+lednum(group_lock)
  grp_led:caps		=	+ledcaps(group_lock)
  grp_led:scroll	=	+ledscroll(group_lock)
  mod_led:compose	=	+ledcompose(compose)
  japan:kana_lock	=	+japan(kana_lock)
  caps:shiftlock	=	+ledcaps(shift_lock)
  grab:break_actions    =       +xfree86(grab_break)


! option	=	types
  caps:internal			=	+caps(internal)
  caps:internal_nocancel	=	+caps(internal_nocancel)
  caps:shift			=	+caps(shift)
  caps:shift_nocancel		=	+caps(shift_nocancel)
  numpad:pc			=	+numpad(pc)
  numpad:mac			=	+numpad(mac)
  numpad:microsoft		=	+numpad(microsoft)
  numpad:shift3       		=	+numpad(shift3)
